{
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "plugins": [
    "react",
    "react-hooks"
  ],
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    // Enforce consistent semicolon usage
    "semi": ["error", "always"],

    // Enforce the use of single quotes for strings
    "quotes": ["error", "single"],

    // Enforce consistent indentation (2 spaces)
    "indent": ["error", 2],

    // Enforce consistent line breaks between functions and variables
    "newline-before-return": "error",

    // Enforce the consistent use of curly braces for all control statements
    "curly": ["error", "all"],

    // Enforce no unused variables
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],

    // Enforce that all variables are declared using `const` or `let`
    "no-var": "error",

    // Disallow unnecessary `else` statements after return
    "no-else-return": "error",

    // Enforce the use of `===` and `!==` for comparisons
    "eqeqeq": "error",

    // Ensure that every `useEffect` hook has a dependency array
    "react-hooks/exhaustive-deps": "warn",

    // Disallow `console.log` and other debugging tools in production code
    "no-console": ["warn", { "allow": ["warn", "error"] }],

    // React specific: enforce consistent naming of components
    "react/jsx-pascal-case": "error",

    // React specific: prevent direct mutation of state
    "react/no-direct-mutation-state": "error",

    // Enforce no extra spaces inside of arrays or objects
    "no-multi-spaces": "error"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
